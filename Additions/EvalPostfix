
eval PSucc_0 (PI_0 n) = (PI_0 (n+1))
eval PAdd_0 x = PAdd_1 x
eval (PAdd_1 (PI_0 x)) (PI_0 y) = PI_0 (x + y)
eval PMul_0 x = PMul_1 x
eval (PMul_1 (PI_0 x)) (PI_0 y) = PI_0 (x*y)
eval PCons_0 x = PCons_1 x
eval (PCons_1 (PI_0 x)) (PL_0 y) = PL_0 (x:y)
eval (PComma_0) x = PComma_1 x
eval (PComma_1 x) y = PT_0 (x,y)

eval (PT_0 (a,b)) f = f $$ a $$ b

eval (PL_0 l) e = PL_1 l e
eval (PL_1 [] e) _ = e
eval (PL_1 (x:y) e) c = c $$ (PI_0 x) $$ eval (PL_1 y e) c

eval (PI_0 n) z = PI_1 n z
eval (PI_1 n z) s = PI_2 n z s
eval (PI_2 n z s) a = PI_3 n z s a
eval (PI_3 n z s a) m = convNum n (z,s,a,m)

convNum 0 t@(z,s,a,m) = z
convNum 1 t@(z,s,a,m) = s $$ z
convNum 2 t@(z,s,a,m) = s $$ (s $$ z)
convNum n t@(z,s,a,m) = a $$ (convNum (n `mod` 2) t) $$ (m $$ convNum 2 t $$ convNum (n `div` 2) t)

dePI (PI_0 n) = n
dePL (PL_0 l) = l
dePT (PT_0 (a,b)) = (a,b)
